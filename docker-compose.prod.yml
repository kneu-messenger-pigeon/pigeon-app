name: pigeon-app
services:
  authorizer:
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      INFISICAL_TOKEN: $INFISICAL_TOKEN
      KAFKA_HOST: kafka:9092
      LISTEN: :80
    image: ghcr.io/kneu-messenger-pigeon/authorizer@sha256:a8fd963b64150183ba3d55c066fccd4d1cf896eae450c26adf3d8e7b32e0db3b
    networks:
      pigeon: null
    ports:
    - mode: ingress
      target: 80
      published: "8890"
      protocol: tcp
    restart: always
  init-kafka:
    depends_on:
      kafka:
        condition: service_started
    environment:
      KAFKA_HOST: kafka:9092
    image: ghcr.io/kneu-messenger-pigeon/init-kafka@sha256:52021b58f88267e2ed7dd477a91e84d20df9e080a6ed70ce5c2e4e3fe772cf49
    networks:
      pigeon: null
    restart: on-failure
  kafka:
    depends_on:
      zookeeper:
        condition: service_started
    environment:
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_CFG_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://localhost:29092
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CFG_LISTENERS: INTERNAL://:9092,EXTERNAL://:29092
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ENABLE_KRAFT: "no"
    healthcheck:
      test:
      - CMD
      - kafka-topics.sh
      - --bootstrap-server
      - localhost:9092
      - --topic
      - meta-events
      - --describe
      timeout: 5s
      interval: 15s
      retries: 5
      start_period: 1m5s
    image: bitnami/kafka@sha256:b115471c8475bffeb9683039f276bfaae41d52c875a56407a961cf78f3d14517
    networks:
      pigeon: null
    restart: always
    volumes:
    - type: volume
      source: kafka_data
      target: /bitnami
      volume: {}
  kafka-ui:
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_NAME: local
    healthcheck:
      test:
      - CMD
      - nc
      - -vz
      - localhost
      - "8080"
      timeout: 5s
      interval: 15s
      retries: 3
    image: provectuslabs/kafka-ui@sha256:477d4c3d896a0deefdcccf0e08e8fb0d4258e5340d34f3c3513f75073de5835c
    networks:
      pigeon: null
    ports:
    - mode: ingress
      target: 8080
      published: "8892"
      protocol: tcp
    restart: unless-stopped
  realtime-importer:
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      INFISICAL_TOKEN: $INFISICAL_TOKEN
      KAFKA_HOST: kafka:9092
    image: ghcr.io/kneu-messenger-pigeon/realtime-importer@sha256:ea99718d54e94008e8ae891bfd9d75a162f248fd14943b7e5795924fa3336218
    networks:
      pigeon: null
    restart: always
    volumes:
    - type: volume
      source: realtime-importer-storage
      target: /storage
      volume: {}
  score-storage-api:
    depends_on:
      score-storage-redis:
        condition: service_healthy
    environment:
      INFISICAL_TOKEN: $INFISICAL_TOKEN
      LISTEN: :80
      REDIS_DSN: redis://score-storage-redis:6379
    image: ghcr.io/kneu-messenger-pigeon/score-storage-api@sha256:5309c299596033248d8f1d15be6ed942d8498cc9091586c9d77aa8de850dde4a
    networks:
      pigeon: null
    restart: always
  score-storage-redis:
    healthcheck:
      test:
      - CMD
      - redis-cli
      - ping
      timeout: 5s
      interval: 15s
      retries: 3
    image: redis@sha256:121bac949fb5f623b9fa0b4e4c9fb358ffd045966e754cfa3eb9963f3af2fe3b
    networks:
      pigeon: null
    restart: always
    volumes:
    - type: volume
      source: score-storage-redis
      target: /data
      volume: {}
  secondary-db-disciplines-importer:
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      INFISICAL_TOKEN: $INFISICAL_TOKEN
      KAFKA_HOST: kafka:9092
    extra_hosts:
    - host.docker.internal:host-gateway
    image: ghcr.io/kneu-messenger-pigeon/secondary-db-disciplines-importer@sha256:0453606671618da5284d50be9c81d0d627bab1e1c1d972835ba0b8a245116e0a
    networks:
      pigeon: null
    restart: always
  secondary-db-lessons-importer:
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      INFISICAL_TOKEN: $INFISICAL_TOKEN
      KAFKA_HOST: kafka:9092
    extra_hosts:
    - host.docker.internal:host-gateway
    image: ghcr.io/kneu-messenger-pigeon/secondary-db-lessons-importer@sha256:3b555b75e46735d8b167a83aa65ca89062a38e1901cde2000526fbb3e19e41db
    networks:
      pigeon: null
    restart: always
  secondary-db-scores-importer:
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      INFISICAL_TOKEN: $INFISICAL_TOKEN
      KAFKA_HOST: kafka:9092
    extra_hosts:
    - host.docker.internal:host-gateway
    image: ghcr.io/kneu-messenger-pigeon/secondary-db-scores-importer@sha256:106adc7c6f31e498e287a5eaa0c87415e58f627dde5dd15c0ce5d79dfbce3e34
    networks:
      pigeon: null
    restart: always
  secondary-db-watcher:
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      ERROR_COUNT_TO_BREAK: "3"
      INFISICAL_TOKEN: $INFISICAL_TOKEN
      KAFKA_HOST: kafka:9092
      PAUSE_AFTER_ERROR: "60"
      PAUSE_AFTER_SUCCESS: "600"
    extra_hosts:
    - host.docker.internal:host-gateway
    image: ghcr.io/kneu-messenger-pigeon/secondary-db-watcher@sha256:147ca3f82a2c67c2a92238136a3651dd1725653533e62b84c5f20f4d83ad9846
    networks:
      pigeon: null
    restart: always
    volumes:
    - type: volume
      source: secondary-db-watcher-storage
      target: /storage
      volume: {}
  storage-writer:
    depends_on:
      kafka:
        condition: service_healthy
      score-storage-redis:
        condition: service_healthy
    environment:
      INFISICAL_TOKEN: $INFISICAL_TOKEN
      KAFKA_HOST: kafka:9092
      REDIS_DSN: redis://score-storage-redis:6379
    image: ghcr.io/kneu-messenger-pigeon/storage-writer@sha256:bdad0c3d411887b2e6cd06c2fde47e5396c839d7061b65a07915d4150b0be0a6
    networks:
      pigeon: null
    restart: always
  telegram-app:
    depends_on:
      kafka:
        condition: service_healthy
      telegram-app-redis:
        condition: service_healthy
    environment:
      AUTHORIZER_HOST: http://authorizer
      COMMIT_THRESHOLD: "1000"
      INFISICAL_TOKEN: $INFISICAL_TOKEN
      KAFKA_HOST: kafka:9092
      REDIS_DSN: redis://telegram-app-redis:6379
      SCORE_STORAGE_API_HOST: http://score-storage-api
    image: ghcr.io/kneu-messenger-pigeon/telegram-app@sha256:0dbd30d2d28b9283cd5a3a4e8fe03b227e4c74dcd921f37c1ffa938124b90611
    networks:
      pigeon: null
    restart: always
  telegram-app-redis:
    healthcheck:
      test:
      - CMD
      - redis-cli
      - ping
      timeout: 5s
      interval: 15s
      retries: 3
    image: redis@sha256:121bac949fb5f623b9fa0b4e4c9fb358ffd045966e754cfa3eb9963f3af2fe3b
    networks:
      pigeon: null
    restart: always
    volumes:
    - type: volume
      source: telegram-app-redis
      target: /data
      volume: {}
  zookeeper:
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
    healthcheck:
      test:
      - CMD
      - bash
      - -c
      - unset
      - JMX_PORT
      - ;
      - kafka-topics.sh
      - --zookeeper
      - zookeeper:2181
      - --list
      timeout: 5s
      interval: 15s
      retries: 5
    image: bitnami/zookeeper@sha256:9d0ab9c5910143217b69a3c5abbe55aad853ce14a6bcde2668d9c217c1a681cc
    networks:
      pigeon: null
    restart: always
    volumes:
    - type: volume
      source: zookeeper_data
      target: /bitnami
      volume: {}
networks:
  pigeon:
    name: pigeon-app_pigeon
    driver: bridge
volumes:
  kafka_data:
    name: pigeon-app_kafka_data
    driver: local
  realtime-importer-storage:
    name: pigeon-app_realtime-importer-storage
    driver: local
  score-storage-redis:
    name: pigeon-app_score-storage-redis
    driver: local
  secondary-db-watcher-storage:
    name: pigeon-app_secondary-db-watcher-storage
    driver: local
  telegram-app-redis:
    name: pigeon-app_telegram-app-redis
    driver: local
  zookeeper_data:
    name: pigeon-app_zookeeper_data
    driver: local
