name: Integration testing

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      is-workflow-call:
        required: false
        type: boolean
        default: true
    secrets:
      OVPN_CLIENT_KEY:
        required: true
      SSH_KEY:
        required: true
      INFISICAL_TOKEN_INTEGRATION_TEST:
        required: true
      CONTAINER_REGISTRY_READ_TOKEN:
        required: true

concurrency:
  group: remote-server-with-openvpn-connection
  cancel-in-progress: false

jobs:
  integration-test:
    name: Integration test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        if: ${{ inputs.is-workflow-call }}
        with:
          name: docker-compose.prod.yml

      - name: Show diff docker-compose.prod.yml
        run: git diff docker-compose.prod.yml

      ## Start section with VPN connections
      - uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: openvpn openvpn-systemd-resolved
          version: 1.0
      - name: Write OVPN config
        run: printf "${{ vars.OVPN_CONFIG }}" > .openvpn-client.ovpn
      - name: Connect to VPN
        uses: kota65535/github-openvpn-connect-action@v3
        with:
          config_file: .openvpn-client.ovpn
          client_key: ${{ secrets.OVPN_CLIENT_KEY }}
      ## Finish  section with VPN connections
      - name: rsync deployments
        uses: burnett01/rsync-deployments@6.0.0
        with:
          switches: -avzrci --delete  --exclude=".*" --exclude="client.key" --exclude="openvpn*"
          remote_path: ${{ vars.REMOTE_INTEGRATION_TEST_DIR }}
          remote_host: ${{ vars.SSH_HOST }}
          remote_user: ${{ vars.SSH_USER }}
          remote_key: ${{ secrets.SSH_KEY }}

      - name: Execute integration test on remote server
        uses: appleboy/ssh-action@v0.1.10
        timeout-minutes: 10
        env:
          INFISICAL_TOKEN: ${{ secrets.INFISICAL_TOKEN_INTEGRATION_TEST }}
          WORKDIR: ${{ vars.REMOTE_INTEGRATION_TEST_DIR }}
          DOCKER_USER: ${{ github.repository_owner }}
          DOCKER_PASSWORD: ${{ secrets.CONTAINER_REGISTRY_READ_TOKEN }}
        with:
          host: ${{ vars.SSH_HOST }}
          username: ${{ vars.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          envs: INFISICAL_TOKEN,WORKDIR,DOCKER_USER,DOCKER_PASSWORD,DOCKER_COMPOSE
          script_stop: true
          command_timeout: 25m
          script: |
            grep '"ghcr.io"' ~/.docker/config.json > /dev/null || echo $DOCKER_PASSWORD | docker login ghcr.io -u "$DOCKER_USER" --password-stdin
            mkdir -p "$WORKDIR" && cd "$WORKDIR"
            export INFISICAL_DISABLE_UPDATE_CHECK=true
            infisical run --env=integration-testing -- ./bin/run-integration-test.sh
